---
AWSTemplateFormatVersion: "2010-09-09"

Description: |
  S3 backed website for use with CloudFlare. This template will create:
  + CodeCommit Git repository
  + S3 bucket for web site content
  + Redirect from "www." to naked domain / domain apex
  + Access logs to a separate S3 bucket

Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
    - Label:
        default: DOMAIN
      Parameters:
      - DomainName
    - Label:
        default: CODE COMMIT - N.VIRGINIA, OHIO, OREGON, IRELAND ONLY
      Parameters:
      - PreExistingGitRepository
      - NotificationEmail
      - PreExistingCodeCommitUser
    - Label:
        default: WEBSITE BUCKETS
      Parameters:
      - PreExistingSiteBucket
      - PreExistingRedirectBucket
    - Label:
        default: LOGGING & MONITORING
      Parameters:
      - PreExistingLogsBucket
    ParameterLabels:
      DomainName:
        default: Root Domain
      PreExistingGitRepository:
        default: Repo Name
      NotificationEmail:
        default: Notifications Email
      PreExistingCodeCommitUser:
        default: CodeCommit User
      PreExistingSiteBucket:
        default: Website Bucket Name
      PreExistingRedirectBucket:
        default: Redirect Bucket Name
      PreExistingLogsBucket:
        default: Logs for Bucket Name
# Help for CloudFormation Parameters
# http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/parameters-section-structure.html
Parameters:
  # Domain: example.com
  DomainName:
    Type: String
    Description: "The naked domain / zone apex for your website - don't use 'www'!"
    Default: example.com
    # Jesus REGEX can be a pain in the rear! http://rubular.com/ is a good resource if you get stuck. 
    # Helpful but usually not reference for REGEX in CloudFormation templates:
    # http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/cfn-regexes.html
    AllowedPattern: "^([a-z0-9]|[a-z0-9][a-z0-9\\-]{0,61}[a-z0-9])(\\.([a-z0-9]|[a-z0-9][a-z0-9\\-]{0,61}[a-z0-9]))*$"
    ConstraintDescription: "Provide a valid domain name using only lowercase letters, numbers, and dashes (-)"

  PreExistingGitRepository:
    Description: "OPTIONAL - Git repository name for pre-existing CodeCommit repository. Leave empty to have CodeCommit Repository created and managed by this stack."
    Type: String
    Default: ""
    
  # Email address to receive Git activity notifications: you@anotherdomain.com
  # CANNOT be in same domain!
  NotificationEmail:
    Type: String
    Description: "Initial email address to receive Git change notifications. Make sure verify the email."
    MinLength: 6
    AllowedPattern: ".+@[a-z0-9]+[-.a-z0-9]*(\\.[a-z][a-z]+)+"
    ConstraintDescription: "Provide a valid email address"
    
  PreExistingCodeCommitUser:
    Type: String
    Description: "OPTIONAL - Name of a user that will only have SSH access for this website's CodeCommit repo. Leave empty to have an IAM user created and managed by this stack. The user created with this stack will not have Programmatic access or AWS Management Console access. Note that SSH keys have to be generated separately and the generated public key will need to be uploaded by the administrator. Also note that you need to manually remove the SSH key before deleting this stack otherwise stack deletion will fail."
  
  # Keep an S3 bucket instead of deleting.
  # "If you want to continue to use the same bucket name, don't delete the bucket."
  # Ref: http://docs.aws.amazon.com/AmazonS3/latest/user-guide/delete-bucket.html
  PreExistingSiteBucket:
    Description: "OPTIONAL - Name of pre-existing website bucket. Leave empty to have website bucket created and managed by this stack. Avoid deleting and recreating buckets as it can take a long time for the name to become available again."
    Type: String
    Default: ""

  PreExistingRedirectBucket:
    Description: "OPTIONAL - Name of pre-existing 'www' redirect bucket. Leave empty to have redirect bucket created and managed by this stack. Avoid deleting and recreating buckets as it can take a long time for the name to become available again."
    Type: String
    Default: ""

  PreExistingLogsBucket:
    Description: "OPTIONAL - Name of pre-existing access logs bucket. Leave empty to have access logs bucket created and managed by this stack."
    Type: String
    Default: ""

Conditions:
  NeedsNewGitRepository: !Equals [!Ref PreExistingGitRepository, ""]
  NeedsNewSiteBucket: !Equals [!Ref PreExistingSiteBucket, ""]
  NeedsNewRedirectBucket: !Equals [!Ref PreExistingRedirectBucket, ""]
  NeedsNewLogsBucket: !Equals [!Ref PreExistingLogsBucket, ""]
  NeedsNewCodeCommitUser: !Equals [!Ref PreExistingCodeCommitUser, ""]

Resources:
  # Bucket for CloudFront and S3 access logs: logs.example.com
  LogsBucket:
    Condition: NeedsNewLogsBucket
    DeletionPolicy: Retain
    Type: "AWS::S3::Bucket"
    Properties:
      BucketName: !Sub "logs.${DomainName}"
      AccessControl: LogDeliveryWrite

  # Bucket for site content: example.com
  SiteBucket:
    Condition: NeedsNewSiteBucket
    DeletionPolicy: Retain
    Type: "AWS::S3::Bucket"
    Properties:
      BucketName: !Ref DomainName
      AccessControl: PublicRead
      # Keep versions of website content in case of 'accidents'.
      # For help reference: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket.html#cfn-s3-bucket-versioning
      VersioningConfiguration: 
        Status: Enabled
      WebsiteConfiguration:
        IndexDocument: index.html
        ErrorDocument: error.html
      # logs.example.com/logs/s3/example.com/
      LoggingConfiguration:
        DestinationBucketName: !If [NeedsNewLogsBucket, !Ref LogsBucket, !Ref PreExistingLogsBucket]
        LogFilePrefix: !Sub "logs/s3/${DomainName}/"

  # Bucket to redirect to example.com: www.example.com
  RedirectBucket:
    Condition: NeedsNewRedirectBucket
    DeletionPolicy: Retain
    Type: "AWS::S3::Bucket"
    Properties:
      BucketName: !Sub "www.${DomainName}"
      AccessControl: BucketOwnerFullControl
      # logs.example.com/logs/s3/www.example.com/
      LoggingConfiguration:
        DestinationBucketName: !If [NeedsNewLogsBucket, !Ref LogsBucket, !Ref PreExistingLogsBucket]
        LogFilePrefix: !Sub "logs/s3/www.${DomainName}/"
      WebsiteConfiguration:
        RedirectAllRequestsTo:
          HostName: !Ref DomainName
          Protocol: https

  # Git repository: example.com
  GitRepository:
    Condition: NeedsNewGitRepository
    DeletionPolicy: Retain
    Type: "AWS::CodeCommit::Repository"
    Properties:
      RepositoryDescription: !Sub "Git repository for ${DomainName}"
      RepositoryName: !Ref DomainName
      Triggers:
        - Name: !Sub "Activity in ${DomainName} Git repository"
          DestinationArn: !Ref NotificationTopic
          Events:
            - all

  # SNS topic for Git repository activity. Email subscription
  NotificationTopic:
    Type: "AWS::SNS::Topic"
    Properties:
      DisplayName: !Sub "Activity in ${DomainName} Git repository"
      Subscription:
        - Endpoint: !Ref NotificationEmail
          Protocol: email
  
  # Don't be a sheep and use IAM Policy AdministratorAccess account for everything!
  # Put users into this group that will only manage this CodeCommit repository.
  
  CodeCommitUser:
    # Help for IAM User:
    # http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-user.html
    Condition: NeedsNewCodeCommitUser
    Type: "AWS::IAM::User"
    Properties: 
      Groups:
      - Ref: WebSiteMgmtGroup
    # AWS documentation state that to use SSH for connecting to AWS CodeCommit you need to add the following
    # policies. However, since we will be making commits locally and not logging into the AWS console
    # use a user account that ONLY has access to perform those actions. Don't use an account that has
    # the ability to modify its own SSH keys.
    # Reference: http://docs.aws.amazon.com/codecommit/latest/userguide/setting-up-ssh-unixes.html?icmpid=docs_acc_console_connect
    #ManagedPolicyArns:
    #  - arn:aws:iam::aws:policy/IAMReadOnlyAccess
    #  - arn:aws:iam::aws:policy/IAMUserSSHKeys
    #Policies:
    #  - Policies
      UserName: !Join ['', [!Ref DomainName, -CodeCommitUser-, !Ref 'AWS::Region' ]]
  
  WebSiteMgmtGroup:
    Type: "AWS::IAM::Group"
    Properties:
      GroupName: !Join ['', [!Ref DomainName, "-", "Contributors"]]
      # It's tempting to add the following property but since we are referencing in CodeCommitPolicy: below
      # no need to add. Otherwise, CloudFormation will spit out a "Circular Dependency" error.
      #Policies:
      #  - Ref: CodeCommitPolicy
  
  # Lock down policy to the specific CodeCommit repo being created in this stack.
  CodeCommitPolicy:
    # Help for Policies:
    # http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-policy.html#cfn-iam-policy-roles
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: !Join ['', ["CodeCommit", "-", !Ref DomainName, "-", !Ref 'AWS::Region' ]]
      # The actions listed below have modified from the default AWS AWSCodeCommitPowerUser IAM Policy.
      PolicyDocument:
        Statement:
        - Effect: Allow
          Action:
          - codecommit:BatchGetRepositories
          - codecommit:CreateBranch
          - codecommit:Get*
          - codecommit:GitPull
          - codecommit:GitPush
          - codecommit:List*
          - codecommit:Put*
          - codecommit:Test*
          - codecommit:Update*
          Resource:
          - !GetAtt GitRepository.Arn
      Groups:
      - Ref: WebSiteMgmtGroup

# Mappings:

Outputs:
  DomainName:
    Description: This static website's domain name.
    Value: !Ref DomainName
  RedirectDomainName:
    Description: Redirect www hostname to naked domain / domain apex.
    Value: !If [NeedsNewRedirectBucket, !Ref RedirectBucket, !Ref PreExistingRedirectBucket]
  SiteBucket:
    Value: !If [NeedsNewSiteBucket, !Ref SiteBucket, !Ref PreExistingSiteBucket]
  RedirectBucket:
    Value: !If [NeedsNewRedirectBucket, !Ref RedirectBucket, !Ref PreExistingRedirectBucket]
  LogsBucket:
    Description: Access logs for your website.
    Value: !If [NeedsNewLogsBucket, !Ref LogsBucket, !Ref PreExistingLogsBucket]
  GitRepositoryName:
    Description: Git repository name
    Value: !If [NeedsNewGitRepository, !Ref DomainName, !Ref PreExistingGitRepository]
  NotificationsEmailAddress:
    Description: CodeCommit notifications will be sent to this email address.
    Value: !Ref NotificationEmail
  GitCloneUrlHttp:
    Description: Git HTTPS endpoint for clone and push.
    Value: !If [NeedsNewGitRepository, !GetAtt GitRepository.CloneUrlHttp, "N/A"]
  GitCloneUrlSsh:
    Description: Git SSH endpoint for clone and push.
    Value: !If [NeedsNewGitRepository, !GetAtt GitRepository.CloneUrlSsh, "N/A"]